{"version":3,"sources":["TodoListItem.tsx","TodoList.tsx","AddTodoForm.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","style","textDecoration","complete","undefined","type","checked","onClick","text","TodoList","todos","map","key","AddTodoForm","initialTodos","App","useState","setTodos","selectedTodo","newTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAOaA,EAAgC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACjD,OACI,4BACI,2BAAOC,MAAO,CAACC,eAAgBH,EAAKI,SAAW,oBAAiBC,IAC5D,2BAAOC,KAAK,WAAWC,QAASP,EAAKI,SAAUI,QAAS,WACpDP,EAAWD,MAEd,IAAKA,EAAKS,QCNdC,EAA4B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOV,EAAiB,EAAjBA,WAC/C,OACI,4BACKU,EAAMC,KAAI,SAAAZ,GAAI,OACX,kBAAC,EAAD,CAAca,IAAKb,EAAKS,KAAMT,KAAMA,EAAMC,WAAYA,SCVzDa,EAAwB,WACjC,OACI,8BACI,2BAAOR,KAAK,SACZ,4BAAQA,KAAK,UAAb,cCDNS,EAAuB,CACzB,CACIN,KAAM,eACNL,UAAU,GAEd,CACIK,KAAM,YACNL,UAAU,IA4BHY,MAxBf,WAAgB,IAAD,EACeC,mBAASF,GADxB,mBACJJ,EADI,KACGO,EADH,KAgBX,OACI,oCACI,kBAAC,EAAD,CAAUP,MAAOA,EAAOV,WAfb,SAACkB,GAChB,IAAMC,EAAWT,EAAMC,KAAI,SAACZ,GACxB,OAAIA,IAASmB,EACF,eACAnB,EADP,CAEII,UAAWJ,EAAKI,WAGjBJ,KAEXkB,EAASE,MAML,kBAAC,EAAD,QC7BZC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.2f9403dd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Props {\r\n    todo: Todo;\r\n    toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoListItem: React.FC<Props> = ({todo, toggleTodo}) => {\r\n    return (\r\n        <li>\r\n            <label style={{textDecoration: todo.complete ? 'line-through' : undefined}}>\r\n                <input type=\"checkbox\" checked={todo.complete} onClick={() => {\r\n                    toggleTodo(todo);\r\n                }}/>\r\n                {' '}{todo.text}\r\n            </label>\r\n        </li>\r\n    );\r\n};","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\ninterface Props {\r\n    todos: Todo[];\r\n    toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoList: React.FC<Props> = ({ todos, toggleTodo }) => {\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => (\r\n                <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\r\n            ))}\r\n        </ul>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const AddTodoForm: React.FC = () => {\r\n    return (\r\n        <form>\r\n            <input type=\"text\" />\r\n            <button type=\"submit\">Add Todo</button>\r\n        </form>\r\n    );\r\n};","// @ts-ignore\r\nimport React, { useState } from 'react';\r\nimport { TodoList } from './TodoList';\r\nimport { AddTodoForm } from './AddTodoForm';\r\n\r\nconst initialTodos: Todo[] = [\r\n    {\r\n        text: 'Walk the dog',\r\n        complete: false,\r\n    },\r\n    {\r\n        text: 'Write app',\r\n        complete: true,\r\n    },\r\n];\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = useState(initialTodos);\r\n\r\n    const toggleTodo = (selectedTodo: Todo) => {\r\n        const newTodos = todos.map((todo: Todo) => {\r\n            if (todo === selectedTodo) {\r\n                return {\r\n                    ...todo,\r\n                    complete: !todo.complete,\r\n                };\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TodoList todos={todos} toggleTodo={toggleTodo} />\r\n            <AddTodoForm />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// @ts-ignore\r\nimport React from 'react';\r\n// @ts-ignore\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["TodoListItem.tsx","TodoList.tsx","AddTodoForm.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","style","textDecoration","complete","undefined","type","checked","onClick","text","TodoList","todos","map","AddTodoForm","addTodo","useState","setText","value","onChange","e","target","preventDefault","initialTodos","App","setTodos","selectedTodo","newTodos","newTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAOaA,EAAgC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACjD,OACI,6BACI,wBACIC,MAAO,CAACC,eAAgBH,EAAKI,SAAW,oBAAiBC,GAD7D,UAGI,uBACIC,KAAK,WACLC,QAASP,EAAKI,SACdI,QAAS,WACLP,EAAWD,MAEhB,IACFA,EAAKS,WCZTC,EAA4B,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOV,EAAgB,EAAhBA,WAC9C,OACI,6BACKU,EAAMC,KAAI,SAAAZ,GAAI,OACX,cAAC,EAAD,CAA8BA,KAAMA,EAAMC,WAAYA,GAAnCD,EAAKS,YCN3BI,EAA+B,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC1C,EAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KAEA,OACI,iCACI,uBACIV,KAAK,OACLW,MAAOR,EACPS,SAAU,SAAAC,GACNH,EAAQG,EAAEC,OAAOH,UAGzB,wBACIX,KAAK,SACLE,QAAS,SAAAW,GACLA,EAAEE,iBACFP,EAAQL,GACRO,EAAQ,KALhB,0BCdNM,EAAuB,CACzB,CACIb,KAAM,eACNL,UAAU,GAEd,CACIK,KAAM,YACNL,UAAU,IAiCHmB,MA7Bf,WACI,MAA0BR,mBAASO,GAAnC,mBAAOX,EAAP,KAAca,EAAd,KAoBA,OACI,qCACI,cAAC,EAAD,CAAUb,MAAOA,EAAOV,WApBD,SAACwB,GAC5B,IAAMC,EAAWf,EAAMC,KAAI,SAAAZ,GACvB,OAAIA,IAASyB,EACF,2BACAzB,GADP,IAEII,UAAWJ,EAAKI,WAGjBJ,KAEXwB,EAASE,MAWL,cAAC,EAAD,CAAaZ,QARI,SAACL,GACtB,IAAMkB,EAAU,CAAClB,OAAML,UAAU,GACjCoB,EAAS,GAAD,mBAAKb,GAAL,CAAYgB,YC7B5BC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.d886fb4b.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n    todo: Todo;\n    toggleTodo: ToggleTodo;\n}\n\nexport const TodoListItem: React.FC<Props> = ({todo, toggleTodo}) => {\n    return (\n        <li>\n            <label\n                style={{textDecoration: todo.complete ? 'line-through' : undefined}}\n            >\n                <input\n                    type=\"checkbox\"\n                    checked={todo.complete}\n                    onClick={() => {\n                        toggleTodo(todo);\n                    }}\n                />{' '}\n                {todo.text}\n            </label>\n        </li>\n    );\n};","import React from 'react';\nimport {TodoListItem} from './TodoListItem';\n\ninterface Props {\n    todos: Todo[];\n    toggleTodo: ToggleTodo;\n}\n\nexport const TodoList: React.FC<Props> = ({todos, toggleTodo}) => {\n    return (\n        <ul>\n            {todos.map(todo => (\n                <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo}/>\n            ))}\n        </ul>\n    );\n};","import React, {useState} from 'react';\n\ninterface Props {\n    addTodo: AddTodo;\n}\n\nexport const AddTodoForm: React.FC<Props> = ({addTodo}) => {\n    const [text, setText] = useState('');\n\n    return (\n        <form>\n            <input\n                type=\"text\"\n                value={text}\n                onChange={e => {\n                    setText(e.target.value);\n                }}\n            />\n            <button\n                type=\"submit\"\n                onClick={e => {\n                    e.preventDefault();\n                    addTodo(text);\n                    setText('');\n                }}\n            >\n                Add Todo\n            </button>\n        </form>\n    );\n};","import React, {useState} from 'react';\nimport {TodoList} from './TodoList';\nimport {AddTodoForm} from './AddTodoForm';\n\nconst initialTodos: Todo[] = [\n    {\n        text: 'Feed the cat',\n        complete: false,\n    },\n    {\n        text: 'Write app',\n        complete: true,\n    },\n];\n\nfunction App() {\n    const [todos, setTodos] = useState(initialTodos);\n\n    const toggleTodo: ToggleTodo = (selectedTodo: Todo) => {\n        const newTodos = todos.map(todo => {\n            if (todo === selectedTodo) {\n                return {\n                    ...todo,\n                    complete: !todo.complete,\n                };\n            }\n            return todo;\n        });\n        setTodos(newTodos);\n    };\n\n    const addTodo: AddTodo = (text: string) => {\n        const newTodo = {text, complete: false};\n        setTodos([...todos, newTodo]);\n    };\n\n    return (\n        <>\n            <TodoList todos={todos} toggleTodo={toggleTodo}/>\n            <AddTodoForm addTodo={addTodo}/>\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}